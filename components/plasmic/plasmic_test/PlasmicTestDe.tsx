// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: b1jHtzznz5qfWCWxvSbcUi
// Component: WCbkjhEoR2t
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Logo from "../../Logo"; // plasmic-import: TmaXwBUdb0/component
import Button from "../../Button"; // plasmic-import: lnqd9ErfP5U/component
import BenefitsCardWithIcon from "../../BenefitsCardWithIcon"; // plasmic-import: gACe1O_O0u/component
import PackagesSections from "../../PackagesSections"; // plasmic-import: 8MORm4CsJp/component
import InfoIconText from "../../InfoIconText"; // plasmic-import: hPX9FO2ErV/component
import RedLink from "../../RedLink"; // plasmic-import: XRqk_ZzmpW/component
import ComparisonTableCard from "../../ComparisonTableCard"; // plasmic-import: 1ThabWFZHA/component
import ComparisonTableRow from "../../ComparisonTableRow"; // plasmic-import: TciHbiRyoi/component
import { CompprYoawes6D } from ""; // plasmic-import: prYoawes6d/codeComponent
import { CompXpMnCrayC } from ""; // plasmic-import: XPMnCray-c/codeComponent

import { useScreenVariants as useScreenVariantsttBNf5QNnjj2 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: ttBNf_5qNnjj2/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_plasmic_test.module.css"; // plasmic-import: b1jHtzznz5qfWCWxvSbcUi/projectcss
import sty from "./PlasmicTestDe.module.css"; // plasmic-import: WCbkjhEoR2t/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: GX4aUrHbReI/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: lAPalT-xsgR/icon
import EnvelopeIconsvgIcon from "./icons/PlasmicIcon__EnvelopeIconsvg"; // plasmic-import: J33e3XWQn/icon
import MobileIconsvgIcon from "./icons/PlasmicIcon__MobileIconsvg"; // plasmic-import: xVXdnuUl-/icon
import PrivacyIconsvgIcon from "./icons/PlasmicIcon__PrivacyIconsvg"; // plasmic-import: gOi0fOFaX/icon
import MasterCardIconsvgIcon from "./icons/PlasmicIcon__MasterCardIconsvg"; // plasmic-import: KbRrj-8yN/icon
import CardPayIconsvgIcon from "./icons/PlasmicIcon__CardPayIconsvg"; // plasmic-import: z-ZV8UwMi/icon
import DiamondIconsvgIcon from "./icons/PlasmicIcon__DiamondIconsvg"; // plasmic-import: n1y1U6inZ/icon
import Section8Icon1SvgIcon from "./icons/PlasmicIcon__Section8Icon1Svg"; // plasmic-import: wPntU_KHu/icon
import Section8Icon2SvgIcon from "./icons/PlasmicIcon__Section8Icon2Svg"; // plasmic-import: NiTNl6egg/icon
import Section8Icon3SvgIcon from "./icons/PlasmicIcon__Section8Icon3Svg"; // plasmic-import: vTbzVlJuR/icon
import Section8Icon4AsvgIcon from "./icons/PlasmicIcon__Section8Icon4Asvg"; // plasmic-import: mYN6LrPP0/icon
import Section8Icon5AsvgIcon from "./icons/PlasmicIcon__Section8Icon5Asvg"; // plasmic-import: wObOM94cD/icon
import Section8Icon6AsvgIcon from "./icons/PlasmicIcon__Section8Icon6Asvg"; // plasmic-import: xatTaGG_J/icon
import Section8Icon4BsvgIcon from "./icons/PlasmicIcon__Section8Icon4Bsvg"; // plasmic-import: 8ZBL7JeNm/icon
import Section8Icon5BsvgIcon from "./icons/PlasmicIcon__Section8Icon5Bsvg"; // plasmic-import: ojh8kIx7p/icon
import Section8Icon6BsvgIcon from "./icons/PlasmicIcon__Section8Icon6Bsvg"; // plasmic-import: mt0C_tznX/icon

export type PlasmicTestDe__VariantMembers = {};

export type PlasmicTestDe__VariantsArgs = {};
type VariantPropType = keyof PlasmicTestDe__VariantsArgs;
export const PlasmicTestDe__VariantProps = new Array<VariantPropType>();

export type PlasmicTestDe__ArgsType = {};
type ArgPropType = keyof PlasmicTestDe__ArgsType;
export const PlasmicTestDe__ArgProps = new Array<ArgPropType>();

export type PlasmicTestDe__OverridesType = {
  root?: p.Flex<"div">;
  logo?: p.Flex<typeof Logo>;
  testSection?: p.Flex<"div">;
  packagesSections?: p.Flex<typeof PackagesSections>;
  packagesSection2?: p.Flex<"div">;
  section5?: p.Flex<"div">;
  section6?: p.Flex<"div">;
  section7?: p.Flex<"div">;
  section8?: p.Flex<"div">;
  dsFooter?: p.Flex<typeof CompprYoawes6D>;
  dsNav?: p.Flex<typeof CompXpMnCrayC>;
};

export interface DefaultTestDeProps {}

function PlasmicTestDe__RenderFunc(props: {
  variants: PlasmicTestDe__VariantsArgs;
  args: PlasmicTestDe__ArgsType;
  overrides: PlasmicTestDe__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsttBNf5QNnjj2()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Test"}</title>
        <meta key="og:title" property="og:title" content={"Test"} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.columns___82XqL)}>
              <div className={classNames(projectcss.all, sty.column__jmd68)}>
                <Logo
                  data-plasmic-name={"logo"}
                  data-plasmic-override={overrides.logo}
                  className={classNames("__wab_instance", sty.logo)}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__wbfVv)}>
                <div className={classNames(projectcss.all, sty.columns__cncf)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.column__okY2E)}
                    >
                      {(
                        hasVariant(globalVariants, "screen", "iPadMini")
                          ? true
                          : true
                      ) ? (
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            sty.link__zaAHa
                          )}
                          component={Link}
                          href={"https://www.plasmic.app/" as const}
                          platform={"nextjs"}
                        >
                          {"KUNDENSERVICE"}
                        </p.PlasmicLink>
                      ) : null}
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.column__sonC8)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___6XRsO
                      )}
                      component={Link}
                      href={"https://www.plasmic.app/" as const}
                      platform={"nextjs"}
                    >
                      {"LOGIN"}
                    </p.PlasmicLink>
                  </div>
                </div>
              </div>
            </div>
          ) : null}
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__vtHt)}>
              <div className={classNames(projectcss.all, sty.freeBox___2QFtn)}>
                <p.PlasmicImg
                  alt={"Hero Bluecard" as const}
                  className={classNames(sty.img__vhAhs)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "tablet")
                      ? ("322px" as const)
                      : ("auto" as const)
                  }
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/blueHeropng.png",
                    fullWidth: 419,
                    fullHeight: 313,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={"Hero Bluecard premium " as const}
                  className={classNames(sty.img__prLv9)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "tablet")
                      ? ("322px" as const)
                      : ("auto" as const)
                  }
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/bluePremiumHeropng.png",
                    fullWidth: 423,
                    fullHeight: 323,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__xmmgr)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("299px" as const)
                    : hasVariant(globalVariants, "screen", "iPadMini")
                    ? ("300px" as const)
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? ("529px" as const)
                    : ("638px" as const)
                }
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/plasmic_test/images/boyHeropng.png",
                  fullWidth: 404,
                  fullHeight: 685,
                  aspectRatio: undefined
                }}
              />

              {true ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__i1MjA)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("258px" as const)
                      : hasVariant(globalVariants, "screen", "iPadMini")
                      ? ("258px" as const)
                      : hasVariant(globalVariants, "screen", "tablet")
                      ? ("457px" as const)
                      : ("550px" as const)
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/girlHeropng.png",
                    fullWidth: 506,
                    fullHeight: 590,
                    aspectRatio: undefined
                  }}
                />
              ) : null}

              <p.PlasmicImg
                alt={"Arrow up in graffiti style" as const}
                className={classNames(sty.img__opn3C)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("207px" as const)
                    : ("300px" as const)
                }
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("279px" as const)
                    : hasVariant(globalVariants, "screen", "iPadMini")
                    ? ("279px" as const)
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? ("517px" as const)
                    : ("523px" as const)
                }
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/plasmic_test/images/pfeil11Png.png",
                  fullWidth: 473,
                  fullHeight: 423,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hydT
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Bluecard Mastercard® Debitkarte"
                  : hasVariant(globalVariants, "screen", "tablet")
                  ? "Bluecard Mastercard® Debitkarte"
                  : "Bluecard Mastercard® Debitkarte"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mfKZy
                )}
              >
                {
                  "Keine Bonitätsprüfung. \nJederzeit kündbar. \nIn wenigen Tagen bei dir! "
                }
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__k91Le)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__i8TJs)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "iPadMini")
                      ? ("75%" as const)
                      : ("100%" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/graphityHeropng.png",
                    fullWidth: 367,
                    fullHeight: 357,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__p9FcX)}
                link={"/card/blue" as const}
                type={"primary" as const}
              >
                {"JETZT BESTELLEN"}
              </Button>
            </div>
          ) : null}

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__iwdka)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iMjR
              )}
            >
              {"Eine Karte, viele Vorteile"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uo1U
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Die Bluecard Mastercard® Debitkarte inklusive eigenständigem Girokonto ist für alle, die es unkompliziert und sicher wollen! Du willst zusätzlich auch ein Versicherungspaket,  Zugang zu Airport Lounges und einen eigenen Concierge Service? "
                : "Die Bluecard Mastercard® Debitkarte inklusive eigenständigem Girokonto ist für alle,\ndie es unkompliziert und sicher wollen! Du willst zusätzlich auch ein Versicherungspaket, \nZugang zu Airport Lounges und einen eigenen Concierge Service? "}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jLtk1
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Dann gönn' dir die Bluecard Premium!\n"
                : "Dann gönn' dir die Bluecard Premium!\n"}
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___5ZcJj)}
            >
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : hasVariant(globalVariants, "screen", "iPadMini")
                  ? true
                  : true
              ) ? (
                <p.PlasmicImg
                  alt={"Graffiti motive" as const}
                  className={classNames(sty.img__oU2Yu)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/imageGroup1Png.png",
                    fullWidth: 87,
                    fullHeight: 94,
                    aspectRatio: undefined
                  }}
                />
              ) : null}

              <Button
                className={classNames("__wab_instance", sty.button___12X7N)}
                type={"secondary" as const}
              />

              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : hasVariant(globalVariants, "screen", "iPadMini")
                  ? true
                  : true
              ) ? (
                <p.PlasmicImg
                  alt={"Arrow in graffiti style" as const}
                  className={classNames(sty.img__cO7Ja)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/imageArrowDownpng.png",
                    fullWidth: 120,
                    fullHeight: 124,
                    aspectRatio: undefined
                  }}
                />
              ) : null}
            </p.Stack>
          </p.Stack>

          <div className={classNames(projectcss.all, sty.freeBox___6S88O)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___9X29K)}
            >
              <BenefitsCardWithIcon
                className={classNames(
                  "__wab_instance",
                  sty.benefitsCardWithIcon__mjbvn
                )}
                slot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dnpc0
                    )}
                  >
                    {" Keine Bonitäts-\nprüfung"}
                  </div>
                }
              >
                <EnvelopeIconsvgIcon
                  className={classNames(projectcss.all, sty.svg__yJdc7)}
                  role={"img"}
                />
              </BenefitsCardWithIcon>

              <BenefitsCardWithIcon
                className={classNames(
                  "__wab_instance",
                  sty.benefitsCardWithIcon__pKisG
                )}
                slot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hmDBu
                    )}
                  >
                    {"inklusive\nGirokonto"}
                  </div>
                }
              >
                <MobileIconsvgIcon
                  className={classNames(projectcss.all, sty.svg__nqPI)}
                  role={"img"}
                />
              </BenefitsCardWithIcon>

              <BenefitsCardWithIcon
                className={classNames(
                  "__wab_instance",
                  sty.benefitsCardWithIcon___3LraA
                )}
                slot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__czeKv
                    )}
                  >
                    {"Jederzeit\nkündbar"}
                  </div>
                }
              >
                <PrivacyIconsvgIcon
                  className={classNames(projectcss.all, sty.svg__wJVeI)}
                  role={"img"}
                />
              </BenefitsCardWithIcon>

              <BenefitsCardWithIcon
                className={classNames(
                  "__wab_instance",
                  sty.benefitsCardWithIcon__nlDyC
                )}
                slot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__r1AZp
                    )}
                  >
                    {"vollwertige\nMastercard®"}
                  </div>
                }
              >
                <MasterCardIconsvgIcon
                  className={classNames(projectcss.all, sty.svg___4Eh5Q)}
                  role={"img"}
                />
              </BenefitsCardWithIcon>

              <BenefitsCardWithIcon
                className={classNames(
                  "__wab_instance",
                  sty.benefitsCardWithIcon___7ZP6W
                )}
                slot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8EaKl
                    )}
                  >
                    {"Weltweit\nakzeptiert"}
                  </div>
                }
              >
                <CardPayIconsvgIcon
                  className={classNames(projectcss.all, sty.svg__eX9Qq)}
                  role={"img"}
                />
              </BenefitsCardWithIcon>

              <BenefitsCardWithIcon
                className={classNames(
                  "__wab_instance",
                  sty.benefitsCardWithIcon__yfUwD
                )}
                slot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gIUu
                    )}
                  >
                    {"Attraktives\nDesign"}
                  </div>
                }
              >
                <DiamondIconsvgIcon
                  className={classNames(projectcss.all, sty.svg__fiVbu)}
                  role={"img"}
                />
              </BenefitsCardWithIcon>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__aNptE)}
            >
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : hasVariant(globalVariants, "screen", "iPadMini")
                  ? true
                  : true
              ) ? (
                <p.PlasmicImg
                  alt={"Graffiti motives " as const}
                  className={classNames(sty.img__rNn8M)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/section3Imagepng.png",
                    fullWidth: 221,
                    fullHeight: 237,
                    aspectRatio: undefined
                  }}
                />
              ) : null}

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wQp0P
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Deine Bluecard \nOptionen"
                  : "Deine Bluecard Optionen"}
              </div>
            </p.Stack>
          </div>

          {true ? (
            <div
              data-plasmic-name={"testSection"}
              data-plasmic-override={overrides.testSection}
              className={classNames(projectcss.all, sty.testSection)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__lApP4)} />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__pghBi)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("207px" as const)
                    : ("300px" as const)
                }
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("279px" as const)
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? ("517px" as const)
                    : ("523px" as const)
                }
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/plasmic_test/images/pfeil11Png.png",
                  fullWidth: 473,
                  fullHeight: 423,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__z47Oe
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Bluecard Mastercard® Debitkarte"
                  : hasVariant(globalVariants, "screen", "tablet")
                  ? "Bluecard Mastercard® Debitkarte"
                  : "Bluecard Mastercard® Debitkarte"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__eofbm
                )}
              >
                {
                  "Keine Bonitätsprüfung. \nJederzeit kündbar. \nIn wenigen Tagen bei dir! "
                }
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__gXk9T)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__vPeY)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/graphityHeropng.png",
                    fullWidth: 367,
                    fullHeight: 357,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__p7Ded)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/boomHeropng.png",
                    fullWidth: 359,
                    fullHeight: 295,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__nelUj)}
                link={"/card/blue" as const}
                type={"primary" as const}
              >
                {"JETZT BESTELLEN"}
              </Button>

              <div className={classNames(projectcss.all, sty.freeBox__gB8Qk)}>
                <div className={classNames(projectcss.all, sty.freeBox__b75U8)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__rapjF)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("299px" as const)
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? ("529px" as const)
                        : ("638px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/plasmic_test/images/boyHeropng.png",
                      fullWidth: 404,
                      fullHeight: 685,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__beW06)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("258px" as const)
                          : hasVariant(globalVariants, "screen", "tablet")
                          ? ("457px" as const)
                          : ("550px" as const)
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/plasmic_test/images/girlHeropng.png",
                        fullWidth: 506,
                        fullHeight: 590,
                        aspectRatio: undefined
                      }}
                    />
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__jPsh)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___7DZ8)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "tablet")
                        ? ("400px" as const)
                        : ("auto" as const)
                    }
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/plasmic_test/images/blueHeropng.png",
                      fullWidth: 419,
                      fullHeight: 313,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xutOe)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "tablet")
                        ? ("400px" as const)
                        : ("auto" as const)
                    }
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/plasmic_test/images/bluePremiumHeropng.png",
                      fullWidth: 423,
                      fullHeight: 323,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          ) : null}

          <PackagesSections
            data-plasmic-name={"packagesSections"}
            data-plasmic-override={overrides.packagesSections}
            className={classNames("__wab_instance", sty.packagesSections)}
            slot3={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5OpbI
                )}
              >
                {
                  "Deine Bluecard inklusive eigenständigem\nGirokonto ist weltweit an Millionen Akzeptanzstellen  einsetzbar. Keine Bonitätsprüfung, jederzeit kündbar\nund keine versteckten Kosten. "
                }
              </div>
            }
          >
            <p.PlasmicImg
              alt={"Bluecard debit" as const}
              className={classNames(sty.img__ylPtq)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"628px" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/plasmic_test/images/section4Card1Pngpng.png",
                fullWidth: 630,
                fullHeight: 506,
                aspectRatio: undefined
              }}
            />
          </PackagesSections>

          <div
            data-plasmic-name={"packagesSection2"}
            data-plasmic-override={overrides.packagesSection2}
            className={classNames(projectcss.all, sty.packagesSection2)}
          >
            <div className={classNames(projectcss.all, sty.column__qmdly)}>
              <p.PlasmicImg
                alt={"Bluecard premium" as const}
                className={classNames(sty.img__xC7Ua)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("326px" as const)
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? ("353px" as const)
                    : ("439px" as const)
                }
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/plasmic_test/images/section4Card2Png.png",
                  fullWidth: 554,
                  fullHeight: 542,
                  aspectRatio: undefined
                }}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column___9MLSh)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__tQw07)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__e43D)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aocD4
                    )}
                  >
                    {"BLUECARD PREMIUM"}
                  </div>
                </div>

                <div
                  className={classNames(projectcss.all, sty.freeBox___1Liph)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eePxy
                    )}
                  >
                    {"powered by Mastercard®"}
                  </div>
                </div>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.freeBox__zf8Yd)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bUkT
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Deine Bluecard inklusive eigenständigem \nGirokonto ist weltweit an Millionen Akzeptanzstellen einsetzbar. Keine Bonitätsprüfung, jederzeit kündbar und keine versteckten Kosten. "
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? "Deine Bluecard inklusive eigenständigem \nGirokonto ist weltweit an Millionen Akzeptanzstellen einsetzbar. Keine Bonitätsprüfung, jederzeit kündbar und keine versteckten Kosten. "
                    : "Weniger Sorgen, mehr Zeit für die schönen\nDinge im Leben! Mit der Bluecard Premium bekommst\ndu zusätzlich einzigartige Benefits wie Zugang zu Airport Lounges, Versicherungsleistungen und eigenem Concierge Service."}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__gmmYn)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0B1Dp
                  )}
                >
                  {"gönn' dir jetzt deine Bluecard!"}
                </div>
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__aWL)}
              />
            </div>
          </div>

          <div
            data-plasmic-name={"section5"}
            data-plasmic-override={overrides.section5}
            className={classNames(projectcss.all, sty.section5)}
          >
            <div className={classNames(projectcss.all, sty.column__lgwc4)}>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <p.PlasmicImg
                  alt={"smile face in graffiti style " as const}
                  className={classNames(sty.img__tLZt)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "iPadMini")
                      ? ("80%" as const)
                      : ("100%" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/sec5Image1Png.png",
                    fullWidth: 180,
                    fullHeight: 315,
                    aspectRatio: undefined
                  }}
                />
              ) : null}
            </div>

            <div className={classNames(projectcss.all, sty.column__vsFb1)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dXwZ
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "DEINE VORTEILE \nMIT DER \nBLUECARD PREMIUM"
                  : hasVariant(globalVariants, "screen", "tablet")
                  ? "DEINE VORTEILE MIT \nDER BLUECARD PREMIUM"
                  : "DEINE VORTEILE MIT \nDER BLUECARD PREMIUM"}
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column__wD8ET)}>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <p.PlasmicImg
                  alt={"Graffiti motive" as const}
                  className={classNames(sty.img__wa4B)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "iPadMini")
                      ? ("80%" as const)
                      : ("100%" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/sec5Image2Png.png",
                    fullWidth: 222,
                    fullHeight: 181,
                    aspectRatio: undefined
                  }}
                />
              ) : null}
            </div>
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"section6"}
            data-plasmic-override={overrides.section6}
            hasGap={true}
            className={classNames(projectcss.all, sty.section6)}
          >
            <div className={classNames(projectcss.all, sty.column__cSHg)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__j6TQg)}
              >
                <InfoIconText
                  className={classNames(
                    "__wab_instance",
                    sty.infoIconText__mkHkw
                  )}
                  slot2={
                    "Das Warten auf den Flug ist dir zu langweilig? Mit deiner Bluecard Premium vertreibst du dir die Zeit in exklusiven Airport Lounges weltweit."
                  }
                >
                  <p.PlasmicImg
                    alt={"Plain icon in graffiti style" as const}
                    className={classNames(sty.img__xcB)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/plasmic_test/images/sec6Image1Png.png",
                      fullWidth: 193,
                      fullHeight: 192,
                      aspectRatio: undefined
                    }}
                  />
                </InfoIconText>

                <RedLink
                  className={classNames("__wab_instance", sty.redLink___7WEff)}
                />
              </p.Stack>
            </div>

            <div className={classNames(projectcss.all, sty.column__d1Vo7)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qEvXa)}
              >
                <InfoIconText
                  className={classNames(
                    "__wab_instance",
                    sty.infoIconText__nqE8
                  )}
                  slot={"VERSICHERUNGSPAKET"}
                  slot2={
                    "Dein Flug hat Verspätung oder du hast deinen Schlüssel verloren? Kein Problem mit deiner Bluecard Premium! Mit unseren 11 Versicherungsleistungen bist du in allen Lebenslagen abgesichert. "
                  }
                >
                  <p.PlasmicImg
                    alt={"insurance icon in graffiti style" as const}
                    className={classNames(sty.img___8QdRo)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/plasmic_test/images/sec6Image2Png.png",
                      fullWidth: 178,
                      fullHeight: 195,
                      aspectRatio: undefined
                    }}
                  />
                </InfoIconText>

                <RedLink
                  className={classNames("__wab_instance", sty.redLink__e4JRp)}
                />
              </p.Stack>
            </div>

            <div className={classNames(projectcss.all, sty.column__kLFn)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__tvRgg)}
              >
                <InfoIconText
                  className={classNames(
                    "__wab_instance",
                    sty.infoIconText__rVxo8
                  )}
                  slot={"CONCIERGE SERVICE"}
                  slot2={
                    "Ob Reservierung in deiner Lieblingsbar oder dem Ticketkauf für ein Festival - dein persönlicher Assistent steht dir jeden Tag zur Verfügung und unterstützt dich in allen Situationen. "
                  }
                >
                  <p.PlasmicImg
                    alt={"Concierge icon in graffiti style" as const}
                    className={classNames(sty.img__kLpT6)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/plasmic_test/images/sec6Image3Png.png",
                      fullWidth: 178,
                      fullHeight: 195,
                      aspectRatio: undefined
                    }}
                  />
                </InfoIconText>

                <RedLink
                  className={classNames("__wab_instance", sty.redLink__rEfU)}
                />
              </p.Stack>
            </div>
          </p.Stack>

          <div
            data-plasmic-name={"section7"}
            data-plasmic-override={overrides.section7}
            className={classNames(projectcss.all, sty.section7)}
          >
            <div className={classNames(projectcss.all, sty.column__pSUgA)}>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <p.PlasmicImg
                  alt={"Arrow in graffiti style" as const}
                  className={classNames(sty.img__oxDhS)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "iPadMini")
                      ? ("80%" as const)
                      : ("100%" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/sec7Image1Png.png",
                    fullWidth: 138,
                    fullHeight: 160,
                    aspectRatio: undefined
                  }}
                />
              ) : null}
            </div>

            <div className={classNames(projectcss.all, sty.column__a0Wz)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vzVuV
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "DEINE VORTEILE \nMIT DER \nBLUECARD PREMIUM"
                  : hasVariant(globalVariants, "screen", "tablet")
                  ? "DEINE VORTEILE MIT \nDER BLUECARD PREMIUM"
                  : "WÄHLE DEINE BLUECARD"}
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column__iLj8M)}>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <p.PlasmicImg
                  alt={"Heart in graffiti style" as const}
                  className={classNames(sty.img__xN2Ea)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "iPadMini")
                      ? ("80%" as const)
                      : ("100%" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/sec7Image2Png.png",
                    fullWidth: 114,
                    fullHeight: 115,
                    aspectRatio: undefined
                  }}
                />
              ) : null}
            </div>
          </div>

          <div
            data-plasmic-name={"section8"}
            data-plasmic-override={overrides.section8}
            className={classNames(projectcss.all, sty.section8)}
          >
            <div className={classNames(projectcss.all, sty.column__iFbS3)}>
              <div className={classNames(projectcss.all, sty.freeBox__kw38)}>
                <ComparisonTableCard
                  className={classNames(
                    "__wab_instance",
                    sty.comparisonTableCard__djrzH
                  )}
                />
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__tvSv6)}>
                <div className={classNames(projectcss.all, sty.freeBox__hQdIq)}>
                  <ComparisonTableRow
                    className={classNames(
                      "__wab_instance",
                      sty.comparisonTableRow__gEdnR
                    )}
                    slot2={"Kunststoffkarte"}
                  />

                  <ComparisonTableRow
                    className={classNames(
                      "__wab_instance",
                      sty.comparisonTableRow__kpNbv
                    )}
                    slot={"Girokonto"}
                    slot2={"Inbegriffen"}
                  >
                    <Section8Icon2SvgIcon
                      className={classNames(projectcss.all, sty.svg___4HfO)}
                      role={"img"}
                    />
                  </ComparisonTableRow>

                  <ComparisonTableRow
                    className={classNames(
                      "__wab_instance",
                      sty.comparisonTableRow__xblDo
                    )}
                    slot={"Vollwertige Mastercard®"}
                    slot2={"Millionen Akzeptanzstellen"}
                  >
                    <Section8Icon3SvgIcon
                      className={classNames(projectcss.all, sty.svg___7QyyY)}
                      role={"img"}
                    />
                  </ComparisonTableRow>

                  <ComparisonTableRow
                    className={classNames(
                      "__wab_instance",
                      sty.comparisonTableRow___3BTg
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dc1ZI
                        )}
                      >
                        {"Concierge Service"}
                      </div>
                    }
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7JmIf
                        )}
                      >
                        {"Nicht inbegriffen"}
                      </div>
                    }
                  >
                    <Section8Icon4AsvgIcon
                      className={classNames(projectcss.all, sty.svg__xz32Y)}
                      role={"img"}
                    />
                  </ComparisonTableRow>

                  <ComparisonTableRow
                    className={classNames(
                      "__wab_instance",
                      sty.comparisonTableRow__zA09
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nnJhb
                        )}
                      >
                        {"Versicherungspaket"}
                      </div>
                    }
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6PuLw
                        )}
                      >
                        {"Nicht inbegriffen"}
                      </div>
                    }
                  >
                    <Section8Icon5AsvgIcon
                      className={classNames(projectcss.all, sty.svg___9Lc)}
                      role={"img"}
                    />
                  </ComparisonTableRow>

                  <ComparisonTableRow
                    className={classNames(
                      "__wab_instance",
                      sty.comparisonTableRow__uaesl
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lw6G
                        )}
                      >
                        {"Airport Lounge Zugang"}
                      </div>
                    }
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__c7QhZ
                        )}
                      >
                        {"Nicht inbegriffen"}
                      </div>
                    }
                  >
                    <Section8Icon6AsvgIcon
                      className={classNames(projectcss.all, sty.svg___8AoOi)}
                      role={"img"}
                    />
                  </ComparisonTableRow>

                  <Button
                    className={classNames("__wab_instance", sty.button__oRzw)}
                  />
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column___4ZCvi)}>
              <ComparisonTableCard
                className={classNames(
                  "__wab_instance",
                  sty.comparisonTableCard___5Dt3G
                )}
                slot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o11Hx
                    )}
                  >
                    {"BLUECARD PREMIUM"}
                  </div>
                }
                slot2={"11,99 € pro Monat"}
                slot3={"59,90 € Ausgabegebühr"}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__zt7V4)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/plasmic_test/images/section8Card2Png.png",
                    fullWidth: 327,
                    fullHeight: 200,
                    aspectRatio: undefined
                  }}
                />
              </ComparisonTableCard>

              <div className={classNames(projectcss.all, sty.freeBox__bPfd8)}>
                <ComparisonTableRow
                  className={classNames(
                    "__wab_instance",
                    sty.comparisonTableRow___9HlFz
                  )}
                  slot2={"Kunststoffkarte"}
                />

                <ComparisonTableRow
                  className={classNames(
                    "__wab_instance",
                    sty.comparisonTableRow__tCgsF
                  )}
                  slot={"Girokonto"}
                  slot2={"Inbegriffen"}
                >
                  <Section8Icon2SvgIcon
                    className={classNames(projectcss.all, sty.svg__r1QUz)}
                    role={"img"}
                  />
                </ComparisonTableRow>

                <ComparisonTableRow
                  className={classNames(
                    "__wab_instance",
                    sty.comparisonTableRow__rr2Va
                  )}
                  slot={"Vollwertige Mastercard®"}
                  slot2={"Millionen Akzeptanzstellen"}
                >
                  <Section8Icon3SvgIcon
                    className={classNames(projectcss.all, sty.svg__mJgR2)}
                    role={"img"}
                  />
                </ComparisonTableRow>

                <ComparisonTableRow
                  className={classNames(
                    "__wab_instance",
                    sty.comparisonTableRow___5T4Ii
                  )}
                  slot={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qfwJ2
                      )}
                    >
                      {"Concierge Service"}
                    </div>
                  }
                  slot2={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pAy0C
                      )}
                    >
                      {"Inbegriffen"}
                    </div>
                  }
                >
                  <Section8Icon4BsvgIcon
                    className={classNames(projectcss.all, sty.svg__dy5O2)}
                    role={"img"}
                  />
                </ComparisonTableRow>

                <ComparisonTableRow
                  className={classNames(
                    "__wab_instance",
                    sty.comparisonTableRow__mcVzR
                  )}
                  slot={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gDt1C
                      )}
                    >
                      {"Versicherungspaket"}
                    </div>
                  }
                  slot2={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3ZoVr
                      )}
                    >
                      {"Platinum Package "}
                    </div>
                  }
                >
                  <Section8Icon5BsvgIcon
                    className={classNames(projectcss.all, sty.svg__jeJsE)}
                    role={"img"}
                  />
                </ComparisonTableRow>

                <ComparisonTableRow
                  className={classNames(
                    "__wab_instance",
                    sty.comparisonTableRow__hsEc
                  )}
                  slot={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wpMVr
                      )}
                    >
                      {"Airport Lounge Zugang"}
                    </div>
                  }
                  slot2={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__o8Sun
                      )}
                    >
                      {"Gebührenpflichtig"}
                    </div>
                  }
                >
                  <Section8Icon6BsvgIcon
                    className={classNames(projectcss.all, sty.svg__z7Hn2)}
                    role={"img"}
                  />
                </ComparisonTableRow>
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__jqx95)}
              />
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__bCsgb)}>
            <CompprYoawes6D
              data-plasmic-name={"dsFooter"}
              data-plasmic-override={overrides.dsFooter}
              className={classNames("__wab_instance", sty.dsFooter)}
              data={{
                copyright: {
                  title:
                    "XPAY Solutions GmbH - exklusiver Vertriebspartnerfür die BLUECARD",
                  body: "Mastercard® ist eine eingetragene Marke, und das Kreismuster ist eine Marke von Mastercard® International Incorporated. Die BLUECARD wird von der PayCenterGmbH gemäß der Lizenz von Mastercard® International Inc. herausgegeben."
                },
                footnote: "",
                footerLinks: [
                  {
                    title: "Quick links",
                    id: "id123",
                    links: [
                      {
                        text: "Kundenservice",
                        url: "/",
                        isExternal: false,
                        ariaLabel: "Kundenservice link"
                      },
                      {
                        text: "Preisliste",
                        url: "/",
                        isExternal: false,
                        ariaLabel: "Preisliste link"
                      },
                      {
                        text: "Login",
                        url: "/",
                        isExternal: true,
                        ariaLabel: "Login link"
                      }
                    ]
                  },
                  {
                    title: "BLUECARD",
                    id: "id456",
                    links: [
                      {
                        text: "Rechtliche Dokumente",
                        url: "/",
                        isExternal: false,
                        ariaLabel: "Rechtliche Dokumente link"
                      },
                      {
                        text: "Impressum",
                        url: "/",
                        isExternal: false,
                        ariaLabel: "Impressum link"
                      },
                      {
                        text: "089 998298612 ",
                        url: "/",
                        isExternal: true,
                        icon: "phone",
                        ariaLabel: "tel"
                      }
                    ]
                  }
                ]
              }}
            />
          </div>

          <CompXpMnCrayC
            data-plasmic-name={"dsNav"}
            data-plasmic-override={overrides.dsNav}
            className={classNames("__wab_instance", sty.dsNav)}
            navData={{
              logo: {
                width: "100px",
                height: "100px",
                src: "/images/nav/bluecard-logo.svg",
                alt: "image",
                href: "/imageee"
              },
              navLinks: [
                { href: "/", text: "Home", linkTarget: "_blank" },
                { href: "/", text: "About", linkTarget: "_blank" }
              ]
            }}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "logo",
    "testSection",
    "packagesSections",
    "packagesSection2",
    "section5",
    "section6",
    "section7",
    "section8",
    "dsFooter",
    "dsNav"
  ],
  logo: ["logo"],
  testSection: ["testSection"],
  packagesSections: ["packagesSections"],
  packagesSection2: ["packagesSection2"],
  section5: ["section5"],
  section6: ["section6"],
  section7: ["section7"],
  section8: ["section8"],
  dsFooter: ["dsFooter"],
  dsNav: ["dsNav"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  logo: typeof Logo;
  testSection: "div";
  packagesSections: typeof PackagesSections;
  packagesSection2: "div";
  section5: "div";
  section6: "div";
  section7: "div";
  section8: "div";
  dsFooter: typeof CompprYoawes6D;
  dsNav: typeof CompXpMnCrayC;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicTestDe__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicTestDe__VariantsArgs;
    args?: PlasmicTestDe__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicTestDe__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicTestDe__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicTestDe__ArgProps,
      internalVariantPropNames: PlasmicTestDe__VariantProps
    });

    return PlasmicTestDe__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTestDe";
  } else {
    func.displayName = `PlasmicTestDe.${nodeName}`;
  }
  return func;
}

export const PlasmicTestDe = Object.assign(
  // Top-level PlasmicTestDe renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    logo: makeNodeComponent("logo"),
    testSection: makeNodeComponent("testSection"),
    packagesSections: makeNodeComponent("packagesSections"),
    packagesSection2: makeNodeComponent("packagesSection2"),
    section5: makeNodeComponent("section5"),
    section6: makeNodeComponent("section6"),
    section7: makeNodeComponent("section7"),
    section8: makeNodeComponent("section8"),
    dsFooter: makeNodeComponent("dsFooter"),
    dsNav: makeNodeComponent("dsNav"),

    // Metadata about props expected for PlasmicTestDe
    internalVariantProps: PlasmicTestDe__VariantProps,
    internalArgProps: PlasmicTestDe__ArgProps
  }
);

export default PlasmicTestDe;
/* prettier-ignore-end */
